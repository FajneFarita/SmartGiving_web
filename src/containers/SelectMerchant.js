import React, { Component } from "react"

import {Avatar, Paper, Divider, Radio, Button} from 'material-ui'

import NavBar from "../components/NavBar"

import '../style/SelectMerchant.css'
import {kStyleElevation, kStylePaper} from '../style/styleConstants'
import {WeiToDollars} from '../style/Formatter'
import {containsObject} from '../components/Helpers'

class SelectMerchant extends Component {

  constructor(props) {
    super(props)
    this.state = {selectedValue : ''}
  }

  render() {
    const merchants = [
      {
        name: "Devin the Merchant",
        offer: 90000000000000000,
        timeMin:7,
        timeMax:11,
      },
      {
        name: "Kevin's Big Shipping Company",
        offer: 75000000000000000,
        timeMin:15,
        timeMax:21,
      },
      {
        name: "Jeanette McMerchant",
        offer: 63000000000000000,
        timeMin:9,
        timeMax:14,
      },
      {
        name: "Amazon",
        offer: 68000000000000000,
        timeMin:10,
        timeMax:15,
      }
    ]
    merchants.sort((a, b) => a.offer - b.offer)

    const handleChange = event => {
      this.setState({selectedValue: event.target.value})
    }
    const checked = val => {
      return this.state.selectedValue === val
    }



    const topMerchants = (merch, topCount) => {
      return merch.reduce((merchants, m) => {
        const allMerchants = [...merchants, m]
        if (allMerchants.length <= topCount) {
          return allMerchants
        }
        const minValIndex = allMerchants.reduce((finalIndex, currentVal, currentIndex, array) => {
          return array[currentIndex].offer >= array[finalIndex].offer ? currentIndex : finalIndex
        }, 0)
        return allMerchants.slice(0, minValIndex).concat(allMerchants.slice(minValIndex + 1))
      }, [])
    }

    const availableMerchants = topMerchants(merchants, 3)
    const selectedMerchant = this.state.selectedValue === '' ? undefined : this.state.selectedValue

    return (
        <div>
          <NavBar title={"Select Merchant"} />
          <div className="page-container">
            <Paper elevation={kStyleElevation} style={kStylePaper}>
            <MerchantOptionsHeader/>
            {
              merchants.map((m, i) => {
                return <MerchantOptions  key={i}
                                        name={m.name}
                                        offer={m.offer}
                                        days={[m.timeMin, m.timeMax]}
                                        index={i}
                                        enabled={containsObject(m, availableMerchants)}
                                        radio={{handleChange, checked}}/>
              })
            }
            </Paper>
            <Paper elevation={kStyleElevation} style={kStylePaper}>
             <MerchantSelected merchant = {selectedMerchant}/>
            </Paper>
          </div>
        </div>
      )
  }
}


class MerchantOptions extends Component {

  render() {
    const overlayClass = this.props.enabled ? "merchant-select-no-overlay" : "merchant-select-overlay"
    const avatarStyle = (index) => {
      // Generated by locking in two colors and making new schemes
      const size = 60
      const colors = [
        "#317EAC", // main blue
        "#EDAE44", // main yellow
        "#4B7F52", // green
        "#7FD8BE", // aqua
        "#074F57", // turquoise
      ]
      return {"marginRight":10,
              "height":size,
              "width":size,
              "fontSize": 24,
              "backgroundColor":colors[index%colors.length]}
    }
    return (
          <div className = "merchant-select-container">
            <div className = {overlayClass}/>
            <div className = "merchant-select-merchant-box">
              <div className = "merchant-select-avatar">
                <Avatar style={avatarStyle(this.props.index)}>{this.props.name.charAt(0)}</Avatar>
              </div>
              <div className = "merchant-select-name">{this.props.name}</div>
              <div className = "merchant-select-price">${WeiToDollars(this.props.offer)}</div>
              <div className = "merchant-select-time">{this.props.days[0]} - {this.props.days[1]} days</div>
              <div className = "merchant-select-choice">
                <Radio
                  checked={this.props.radio.checked(this.props.name)}
                  onChange={this.props.radio.handleChange}
                  value={this.props.name}
                  color="primary"
                  disabled={!this.props.enabled}
                  aria-label={this.props.name}/>
              </div>
            </div>

          </div>
      )
  }
}

class MerchantOptionsHeader extends Component {

  render() {

    return (
        <div>
          <div className = "merchant-select-merchant-box merchant-header">
            <div className = "merchant-select-avatar merchant-header-text"/>
            <div className = "merchant-select-name merchant-header-text">Merchant<Divider/></div>
            <div className = "merchant-select-price merchant-header-text">Offer<Divider/></div>
            <div className = "merchant-select-time merchant-header-text">Shipping Time<Divider/></div>
            <div className = "merchant-select-choice merchant-header-text">Selection<Divider/></div>

          </div>
        </div>
      )
  }
}

class MerchantSelected extends Component {
  render () {
    if (this.props.merchant === undefined)
      return <div>Please select a merchant to ship your goods.</div>

    return (
      <div>
        <div className = "merchant-selected-description">
        You have selected <span className = "merchant-selected-name">{this.props.merchant}</span> to ship your goods. Upon confirmation, the merchant will be paid and your goods will be shipped.
        </div>
        <Button onClick ={() => console.log("TADA")} variant="raised" size="medium" color="primary">Confirm</Button>
      </div>
    )
  }
}

export default SelectMerchant

